// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "email": "asif.hajiyev@outlook.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/drivers/save": {
            "post": {
                "description": "Save Driver Location",
                "consumes": [
                    "application/json",
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Driver"
                ],
                "summary": "Save Driver Location, supports batch upload and single location object",
                "parameters": [
                    {
                        "description": "driverLocation",
                        "name": "driverLocation",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/request.DriverLocationRequest"
                        }
                    },
                    {
                        "type": "file",
                        "description": "drivers",
                        "name": "drivers",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.RestResponse"
                        }
                    }
                }
            }
        },
        "/drivers/search": {
            "post": {
                "description": "Serch Driver",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Driver"
                ],
                "summary": "Search Driver by giving rider location and maximum distance",
                "parameters": [
                    {
                        "description": "riderLocation and radius",
                        "name": "riderLocation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SearchDriverRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.RestResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "core.Coordinate": {
            "type": "object",
            "required": [
                "latitude",
                "longitude"
            ],
            "properties": {
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                }
            }
        },
        "model.RestResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "errorDetails": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "request.DriverLocationRequest": {
            "type": "object",
            "required": [
                "location",
                "type"
            ],
            "properties": {
                "location": {
                    "$ref": "#/definitions/core.Coordinate"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "request.SearchDriverRequest": {
            "type": "object",
            "required": [
                "coordinates",
                "radius"
            ],
            "properties": {
                "coordinates": {
                    "$ref": "#/definitions/core.Coordinate"
                },
                "radius": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api/",
	Schemes:          []string{},
	Title:            "Driver Location API",
	Description:      "This is a Driver Location API to save them and search",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
